
name: Spring Boot CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean Gradle Build Cache
        run: ./gradlew --build-cache clean

      - name: Clean build directory
        run: ./gradlew clean

      - name: Run Tests
        run: ./gradlew test --continue
        env:
          SPRING_PROFILES_ACTIVE: test
          APP_VERIFICATION_URL: ${{ secrets.APP_VERIFICATION_URL }}
          JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}

      - name: Generate Test Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Build Project (without tests)
        run: ./gradlew build -x test
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          APP_VERIFICATION_URL: ${{ secrets.APP_VERIFICATION_URL }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test/*.xml

      - name: Upload Test Coverage # 테스트 커버리지 보고서 아티팩트를 업로드합니다.
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: build/reports/jacoco/test/jacocoTestReport.xml

      - name: Debug SONAR_TOKEN
        run: |
          if [ -z "$SONAR_TOKEN" ]; then
            echo "SONAR_TOKEN is not set"
          else
            echo "SONAR_TOKEN is set (length: ${#SONAR_TOKEN})"
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Analyze with SonarQube
        run: |
          ./gradlew sonar -Dsonar.branch.name=${{ github.ref_name }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          APP_VERIFICATION_URL: ${{ secrets.APP_VERIFICATION_URL }}
