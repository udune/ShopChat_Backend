# FeedShop Backend - 포트폴리오용 Cloud Build 설정
steps:
  # 1. Gradle을 사용한 Spring Boot 애플리케이션 빌드
  - name: 'gradle:7.6-jdk17'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "🔨 Building Spring Boot application..."
        chmod +x ./gradlew
        ./gradlew clean build -x test
        echo "✅ Build completed successfully"

  # 2. Docker 이미지 빌드 (현재 commit SHA와 latest 태그 동시 생성)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/feedshop:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/feedshop:latest',
      '.'
    ]

  # 3. Container Registry에 이미지 푸시
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/feedshop:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/feedshop:latest']

  # 4. Cloud Run에 배포
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'feedshop'
      - '--image'
      - 'gcr.io/$PROJECT_ID/feedshop:$COMMIT_SHA'
      - '--region'
      - 'asia-northeast3'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'

      # 포트폴리오용 리소스 설정 (비용 최적화)
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'
      - '--min-instances'
      - '0'  # 미사용 시 완전 종료로 비용 절약
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'

      # Spring Boot 기본 환경 변수
      - '--set-env-vars'
      - 'SPRING_PROFILES_ACTIVE=prod'
      - '--set-env-vars'
      - 'PORT=8080'
      - '--set-env-vars'
      - 'SERVER_ADDRESS=0.0.0.0'
      - '--set-env-vars'
      - 'SERVER_SSL_ENABLED=false'

      # 애플리케이션별 환경 변수
      - '--set-env-vars'
      - 'GCS_ID=$PROJECT_ID'  # 프로젝트 ID 자동 설정
      - '--set-env-vars'
      - 'GCS_BUCKET=feedshop-uploads'
      - '--set-env-vars'
      - 'DB_NAME=feedshop_db'
      - '--set-env-vars'
      - 'DB_USERNAME=cmall'
      - '--set-env-vars'
      - 'CDN_BASE_URL=https://cdn-feedshop.store'
      - '--set-env-vars'
      - 'MAIL_HOST=smtp.gmail.com'
      - '--set-env-vars'
      - 'MAIL_PORT=587'

      # Secret Manager의 시크릿들 (보안 정보)
      - '--set-secrets'
      - 'DB_PASSWORD=db-password:latest'
      - '--set-secrets'
      - 'MAIL_USERNAME=gmail-username:latest'
      - '--set-secrets'
      - 'MAIL_PASSWORD=gmail-password:latest'
      - '--set-secrets'
      - 'MAILGUN_API_KEY=mailgun-api-key:latest'
      - '--set-secrets'
      - 'MAILGUN_DOMAIN=mailgun-domain:latest'
      - '--set-secrets'
      - 'MAILGUN_EMAIL=mailgun-email:latest'
      - '--set-secrets'
      - 'RECAPTCHA_SECRET_KEY=recaptcha-secret:latest'
      - '--set-secrets'
      - 'JWT_SECRET=jwt-secret:latest'
      - '--set-secrets'
      - 'OPENAI_API_KEY=openai-api-key:latest'
      - '--set-secrets'
      - 'GOOGLE_CLIENT_ID=google-client-id:latest'
      - '--set-secrets'
      - 'GOOGLE_CLIENT_SECRET=google-client-secret:latest'
      - '--set-secrets'
      - 'KAKAO_CLIENT_ID=kakao-client-id:latest'
      - '--set-secrets'
      - 'KAKAO_CLIENT_SECRET=kakao-client-secret:latest'

# 빌드 결과물 이미지
images:
  - 'gcr.io/$PROJECT_ID/feedshop:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/feedshop:latest'

# 빌드 옵션
options:
  machineType: 'E2_STANDARD_4'  # 적절한 빌드 성능
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# 타임아웃 설정 (20분)
timeout: '1200s'